name: Update commit hash

inputs:
  repo-owner:
    required: false
    type: string
    description: Name of the owner of the target repository
    default: pytorch
  repo-name:
    required: true
    type: string
    description: Name of the target repository we are updating commit hash for
  branch:
    required: true
    type: string
    description: Branch to fetch commit of from the target repository
  pin-folder:
    type: string
    description: Path to folder with commit pin in the source repository
    required: false
    default: .ci/docker/ci_commit_pins
  test-infra-repository:
    description: Test infra repository to use
    default: 'pytorch/test-infra'
    type: string
  test-infra-ref:
    description: Test infra reference to use
    default: ''
    type: string
  updatebot-token:
    required: true
    type: string
    description: Update bot token
  pytorchbot-token:
    required: true
    type: string
    description: Update bot token

description: Update the pinned commit hash of the target repo on the source repo

runs:
  using: composite
  steps:
    - name: Checkout the source repo with the pinned commit file
      uses: actions/checkout@v3
      with:
        ref: 'main'
        submodules: true
        token: ${{ inputs.updatebot-token }}

    - name: Checkout test-infra for the update_commit_hashes scripts
      uses: actions/checkout@v3
      with:
        repository: ${{ inputs.test-infra-repository }}
        ref: ${{ inputs.test-infra-ref }}
        path: test-infra

    - name: Checkout the target repo
      shell: bash
      run: |
        git clone https://github.com/${{ inputs.repo-owner }}/${{ inputs.repo-name }}.git --quiet

    - uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: pip

    - name: Check if there already exists a PR
      shell: bash
      env:
        SOURCE_REPO: ${{ github.repository }}
        REPO_NAME: ${{ inputs.repo-name }}
        BRANCH: ${{ inputs.branch }}
        PIN_FOLDER: ${{ inputs.pin-folder }}
        UPDATEBOT_TOKEN: ${{ inputs.updatebot-token }}
        PYTORCHBOT_TOKEN: ${{ inputs.pytorchbot-token }}
        NEW_BRANCH_NAME: update-${{ inputs.repo-name }}-commit-hash/${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}
      run: |
        set -ex

        pip install requests==2.31.0
        # put this here instead of the script to prevent accidentally changing the config when running the script locally
        git config --global user.name "PyTorch UpdateBot"
        git config --global user.email "pytorchupdatebot@users.noreply.github.com"

        python test-infra/.github/scripts/update_commit_hashes.py \
          --repo-name "${REPO_NAME}" \
          --branch "${BRANCH}" \
          --pin-folder "${PIN_FOLDER}" \
          --source-repo "${SOURCE_REPO}"
