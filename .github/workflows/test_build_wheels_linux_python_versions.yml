name: Test Build Linux Wheels on only selected python versions

on:
  pull_request:
    paths:
      - .github/actions/setup-binary-builds/action.yml
      - .github/workflows/test_build_wheels_linux_python_versions.yml
      - .github/workflows/build_wheels_linux.yml
      - .github/workflows/generate_binary_build_matrix.yml
      - tools/scripts/generate_binary_build_matrix.py
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  generate-matrix:
    uses: ./.github/workflows/generate_binary_build_matrix.yml
    with:
      package-type: wheel
      os: linux
      test-infra-repository: ${{ github.repository }}
      test-infra-ref: ${{ github.ref }}
      with-cuda: disable
      with-rocm: disable
      build-python-only: enable
      python-versions: '["3.10", "3.11"]'
  test:
    needs: generate-matrix
    strategy:
      fail-fast: false
      matrix:
        include:
          - repository: pytorch/executorch
            pre-script: .ci/scripts/wheel/pre_build_script.sh
            post-script: .ci/scripts/wheel/post_build_script.sh
            smoke-test-script: .ci/scripts/wheel/test_linux.py
            package-name: executorch
    uses: ./.github/workflows/build_wheels_linux.yml
    name: ${{ matrix.repository }}
    with:
      repository: ${{ matrix.repository }}
      ref: main
      test-infra-repository: ${{ github.repository }}
      test-infra-ref: ${{ github.ref }}
      build-matrix: ${{ needs.generate-matrix.outputs.matrix }}
      submodules: recursive
      env-var-script: .ci/scripts/wheel/envvar_linux.sh
      pre-script: ${{ matrix.pre-script }}
      post-script: ${{ matrix.post-script }}
      package-name: ${{ matrix.package-name }}
      smoke-test-script: ${{ matrix.smoke-test-script }}
      trigger-event: ${{ github.event_name }}
