name: Test mobile workflow

on:
  pull_request:
    paths:
      - .github/workflows/mobile_job.yml
      - .github/workflows/test_mobile_job.yml
      - tools/device-farm-runner/**
  workflow_dispatch:

jobs:
  setup-ios-job:
    runs-on: ubuntu-latest
    env:
      IPA_ARCHIVE: TestApp.ipa
      XCTEST_ZIP: TestAppTests.xctest.zip
    steps:
      - name: Download the prebuilt PyTorch iOS app and test suite from S3
        run: |
          set -ex
          wget -q "https://ossci-assets.s3.amazonaws.com/${IPA_ARCHIVE}"
          wget -q "https://ossci-assets.s3.amazonaws.com/${XCTEST_ZIP}"
          # Print the artifacts to manually verify them if needed
          ls -lah "${IPA_ARCHIVE}" "${XCTEST_ZIP}"

      - name: Upload the iOS app
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.IPA_ARCHIVE }}
          path: ${{ env.IPA_ARCHIVE }}

      - name: Upload the test suite
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.XCTEST_ZIP }}
          path: ${{ env.XCTEST_ZIP }}

  test-ios-job:
    needs: setup-ios-job
    permissions:
      id-token: write
      contents: read
    uses: ./.github/workflows/mobile_job.yml
    with:
      device-type: ios
      # For iOS testing, the runner just needs to call AWS Device Farm, so there is no need to run this on macOS
      runner: ubuntu-latest
      project-arn: arn:aws:devicefarm:us-west-2:308535385114:project:b531574a-fb82-40ae-b687-8f0b81341ae0
      ios-ipa-archive: TestApp.ipa
      ios-xctest-zip: TestAppTests.xctest.zip
