name: Release ecosystem library from test to production.

on:
  pull_request:
    paths:
      - .github/workflows/release_library_download_pytorch_org.yml
  push:
    branches:
      - test-promotion
  workflow_dispatch:
    inputs:
      domain:
        description: "Domain to prepare and release"
        required: false
        type: choice
        default: torchao
        options:
          - torchao

permissions:
  id-token: write
  contents: read
  
jobs:
  trigger:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    container:
      image: pytorch/almalinux-builder:cpu
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Configure aws credentials (pytorch account)
        uses: aws-actions/configure-aws-credentials@50ac8dd1e1b10d09dac7b8727528b91bed831ac0 # v3.0.2
        with:
          role-to-assume: arn:aws:iam::749337293305:role/test_gha_read_s3_html
          aws-region: us-east-1
      - name: Promote library to download.pytorch.org
        shell: bash
        run: |
            set -ex
            cd release
            # Install requirements
            DRY_RUN=enabled
            pip install awscli==1.32.18
            
            # Init release versions vars
            source ./release_versions.sh
            
            promote_s3() {
              local package_name
              package_name=$1
              local package_type
              package_type=$2
              local promote_version
              promote_version=$3

              echo "=-=-=-= Promoting ${package_name}'s v${promote_version} ${package_type} packages' =-=-=-="
              (
                  set -x
                  TEST_PYTORCH_PROMOTE_VERSION="${promote_version}" \
                      PACKAGE_NAME="${package_name}" \
                      PACKAGE_TYPE="${package_type}" \
                      TEST_WITHOUT_GIT_TAG=1 \
                      DRY_RUN="${DRY_RUN}" ./promote/s3_to_s3.sh
              )
              echo
            }

            promote_s3 "torchao" whl "${TORCHAO_VERSION}"
