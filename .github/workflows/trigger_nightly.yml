name: Trigger nightly builds for domains

on:
  schedule:
    # every night at 11:30AM UTC, 7:30AM EST, 4:30AM PST
    - cron: 30 11 * * *
  workflow_dispatch:
    inputs:
      domain:
        description: "What domain to trigger"
        required: false
        type: choice
        default: all
        options:
          - vision
          - audio
          - text
          - torchrec
          - tensorrt
          - data
          - fbgemm
          - executorch
          - torchtune
          - torchcodec
          - all
jobs:
  trigger:
    runs-on: ubuntu-latest
    environment: trigger-nightly
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - name: Trigger nightly audio build
        if: ${{ github.event_name == 'schedule' ||  inputs.domain == 'audio' || inputs.domain == 'all' }}
        uses: ./.github/actions/trigger-nightly
        with:
          ref: main
          repository: pytorch/audio
          token: ${{ secrets.GH_PYTORCHBOT_TOKEN }}
          path: audio
      - name: Trigger nightly data build
        if: ${{ github.event_name == 'schedule' ||  inputs.domain == 'data' || inputs.domain == 'all' }}
        uses: ./.github/actions/trigger-nightly
        with:
          ref: main
          repository: pytorch/data
          token: ${{ secrets.GH_PYTORCHBOT_TOKEN }}
          path: data
      - name: Trigger nightly text build
        if: ${{ github.event_name == 'schedule' ||  inputs.domain == 'text' || inputs.domain == 'all' }}
        uses: ./.github/actions/trigger-nightly
        with:
          ref: main
          repository: pytorch/text
          token: ${{ secrets.GH_PYTORCHBOT_TOKEN }}
          path: text
      - name: Trigger nightly vision build
        if: ${{ github.event_name == 'schedule' ||  inputs.domain == 'vision' || inputs.domain == 'all' }}
        uses: ./.github/actions/trigger-nightly
        with:
          ref: main
          repository: pytorch/vision
          token: ${{ secrets.GH_PYTORCHBOT_TOKEN }}
          path: vision
      - name: Trigger nightly torchrec build
        if: ${{ github.event_name == 'schedule' ||  inputs.domain == 'torchrec' || inputs.domain == 'all' }}
        uses: ./.github/actions/trigger-nightly
        with:
          ref: main
          repository: pytorch/torchrec
          token: ${{ secrets.GH_PYTORCHBOT_TOKEN }}
          path: torchrec
      - name: Trigger nightly tensorrt build
        if: ${{ github.event_name == 'schedule' ||  inputs.domain == 'tensorrt' || inputs.domain == 'all' }}
        uses: ./.github/actions/trigger-nightly
        with:
          ref: main
          repository: pytorch/tensorrt
          token: ${{ secrets.GH_PYTORCHBOT_TOKEN }}
          path: tensorrt
      - name: Trigger nightly fbgemm build
        if: ${{ github.event_name == 'schedule' ||  inputs.domain == 'fbgemm' || inputs.domain == 'all' }}
        uses: ./.github/actions/trigger-nightly
        with:
          ref: main
          repository: pytorch/fbgemm
          token: ${{ secrets.GH_PYTORCHBOT_TOKEN }}
          path: fbgemm
      - name: Trigger nightly executorch build
        if: ${{ github.event_name == 'schedule' ||  inputs.domain == 'executorch' || inputs.domain == 'all' }}
        uses: ./.github/actions/trigger-nightly
        with:
          ref: viable/strict
          repository: pytorch/executorch
          token: ${{ secrets.GH_PYTORCHBOT_TOKEN }}
          path: executorch
      - name: Trigger nightly torchtune build
        if: ${{ github.event_name == 'schedule' ||  inputs.domain == 'torchtune' || inputs.domain == 'all' }}
        uses: ./.github/actions/trigger-nightly
        with:
          ref: main
          repository: pytorch/torchtune
          token: ${{ secrets.GH_PYTORCHBOT_TOKEN }}
          path: torchtune
      - name: Trigger nightly torchcodec build
        if: ${{ github.event_name == 'schedule' ||  inputs.domain == 'torchcodec' || inputs.domain == 'all' }}
        uses: ./.github/actions/trigger-nightly
        with:
          ref: main
          repository: pytorch/torchcodec
          token: ${{ secrets.GH_PYTORCHBOT_TOKEN }}
          path: torchcodec
