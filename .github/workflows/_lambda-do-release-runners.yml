on:
  workflow_call:
    inputs:
      tag:
        type: string
        description: tag to create release
        required: true

name: Upload Release for lambdas

jobs:
  release-lambdas:
    name: Upload Release for runners lambdas
    runs-on: ubuntu-latest
    container: node:20
    permissions:
      contents: write
    env:
      REF: ${{ inputs.tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ inputs.tag }}

      # Runner Binaries Syncer
      - name: Install dependencies - Runner Binaries Syncer
        run: yarn install
        working-directory: terraform-aws-github-runner/modules/runner-binaries-syncer/lambdas/runner-binaries-syncer
      - name: Build distribution - Runner Binaries Syncer
        run: yarn build
        env:
          NODE_OPTIONS: "--openssl-legacy-provider"
        working-directory: terraform-aws-github-runner/modules/runner-binaries-syncer/lambdas/runner-binaries-syncer
      - name: Copy js to root - Runner Binaries Syncer
        run: cp terraform-aws-github-runner/modules/runner-binaries-syncer/lambdas/runner-binaries-syncer/dist/index.js .
      - name: create lambda zip - Runner Binaries Syncer
        uses: montudor/action-zip@0852c26906e00f8a315c704958823928d8018b28 # v1.0.0
        with:
          args: zip runner-binaries-syncer.zip index.js

      # ALI scaleUp scaleDown
      - name: Install dependencies - Runners
        run: yarn install
        working-directory: terraform-aws-github-runner/modules/runners/lambdas/runners
      - name: Build distribution - Runners
        run: yarn build
        env:
          NODE_OPTIONS: "--openssl-legacy-provider"
        working-directory: terraform-aws-github-runner/modules/runners/lambdas/runners
      - name: Copy js to root - Runners
        run: cp terraform-aws-github-runner/modules/runners/lambdas/runners/dist/index.js .
      - name: create lambda zip - Runners
        uses: montudor/action-zip@0852c26906e00f8a315c704958823928d8018b28 # v1.0.0
        with:
          args: zip runners.zip index.js

      # Webhook
      - name: Install dependencies - Webhook
        run: yarn install
        working-directory: terraform-aws-github-runner/modules/webhook/lambdas/webhook
      - name: Build distribution - Webhook
        run: yarn build
        env:
          NODE_OPTIONS: "--openssl-legacy-provider"
        working-directory: terraform-aws-github-runner/modules/webhook/lambdas/webhook
      - name: Copy js to root - Webhook
        run: cp terraform-aws-github-runner/modules/webhook/lambdas/webhook/dist/index.js .
      - name: create lambda zip- Webhook
        uses: montudor/action-zip@0852c26906e00f8a315c704958823928d8018b28 # v1.0.0
        with:
          args: zip webhook.zip index.js

      - uses: ncipollo/release-action@440c8c1cb0ed28b9f43e4d1d670870f059653174 # v1.16.0
        with:
          artifacts: "runner-binaries-syncer.zip,runners.zip,webhook.zip"
          allowUpdates: true
          draft: true
          name: ${{ inputs.tag }}
          tag: ${{ inputs.tag }}
          updateOnlyUnreleased: true

  release-python-lambdas:
    strategy:
      fail-fast: false
      matrix:
        include: [
          { dir-name: 'ci-queue-pct',               zip-name: 'ci-queue-pct' },
          { dir-name: 'oss_ci_job_queue_time',      zip-name: 'oss-ci-job-queue-time' },
          { dir-name: 'oss_ci_cur',                 zip-name: 'oss-ci-cur' },
          { dir-name: 'benchmark-results-uploader', zip-name: 'benchmark-results-uploader' },
          { dir-name: 'pytorch-auto-revert',        zip-name: 'pytorch-auto-revert' },
          { dir-name: 'keep-going-call-log-classifier', zip-name: 'keep-going-call-log-classifier' },
        ]
    name: Upload Release for ${{ matrix.dir-name }} lambda
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      REF: ${{ inputs.tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ inputs.tag }}

      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: '3.10'

      - name: Build deployment.zip
        working-directory: aws/lambda/${{ matrix.dir-name }}
        run: make deployment.zip

      - name: Copy deployment.zip to root
        run: cp aws/lambda/${{ matrix.dir-name }}/deployment.zip ${{ matrix.zip-name }}.zip

      - uses: ncipollo/release-action@440c8c1cb0ed28b9f43e4d1d670870f059653174 # v1.16.0
        with:
          artifacts: "${{ matrix.zip-name }}.zip"
          allowUpdates: true
          draft: true
          name: ${{ inputs.tag }}
          tag: ${{ inputs.tag }}
          updateOnlyUnreleased: true

  finish-release:
    needs:
      - release-lambdas
      - release-python-lambdas
    name: Mark the release as final and publish it
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      REF: ${{ inputs.tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ inputs.tag }}
      - uses: ncipollo/release-action@440c8c1cb0ed28b9f43e4d1d670870f059653174 # v1.16.0
        with:
          allowUpdates: true
          draft: false
          name: ${{ inputs.tag }}
          tag: ${{ inputs.tag }}
          updateOnlyUnreleased: true
