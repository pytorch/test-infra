name: Test setup-miniconda

on:
  pull_request:
    paths:
      - .github/workflows/test-setup-miniconda.yml
      - .github/actions/check-disk-space/*
      - .github/actions/setup-miniconda/*

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        runner-type:
          - macos-12
          - macos-m1-12
          - linux.2xlarge
        # Only testing minimum and maximum versions here
        python-version:
          - "3.8"
          - "3.11"
        env-file:
          - ""
          - "./.github/workflows/test-setup-miniconda-env-file"
        pip-requirements-file:
          - ""
          - "./.github/workflows/test-setup-miniconda-pip-requirements-file"
    name: ${{ matrix.runner-type }}-py${{ matrix.python-version }}-${{ matrix.env-file }}-${{ matrix.pip-requirements-file }}
    runs-on: ${{ matrix.runner-type }}
    # If a build is taking longer than 60 minutes on these runners we need
    # to have a conversation
    timeout-minutes: 60
    env:
      PYTHON_VERSION: ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v3

      - name: Get disk space usage and throw an error for low disk space
        uses: ./.github/actions/check-disk-space

      - name: Test that setup-miniconda works
        uses: ./.github/actions/setup-miniconda
        with:
          python-version: ${{ matrix.python-version }}
          environment-file: ${{ matrix.env-file }}
          pip-requirements-file: ${{ matrix.pip-requirements-file }}

      - name: Can use ${CONDA_RUN}, outputs correct python version
        run: |
          ${CONDA_RUN} python --version
          ${CONDA_RUN} python --version | grep "${PYTHON_VERSION}"

      - name: Can use ${CONDA_INSTALL}, installs some conda packages
        run: |
          ${CONDA_INSTALL} numpy cmake ninja typing_extensions dataclasses pip

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}-${{ github.event_name == 'workflow_dispatch' }}
  cancel-in-progress: true
