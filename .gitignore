.vscode
.venv
.idea
.lintbin
.linttemp

*.env
*.zip
*.swp

__pycache__

.DS_Store
*.pem

.terraform
*.tfstate*
crash.log
*.tfvars*
override.tf*
*_override.tf*
.terraformrc
terraform.rc

aws/websites/metrics.pytorch.org/vars.yml

.vercel
torchci/api/log/classify/target/
torchci/api/log/classify/Cargo.lock
*.rs.bk

node_modules/

setup-ssh/yarn-error.log*
setup-ssh/lib/
setup-ssh/__tests__/runner/

**/revert_file_name.txt

# Generated by Maturin
# Byte-compiled / optimized / DLL files
__pycache__/
.pytest_cache/
*.py[cod]

# If you choose to install tools/torchci via pip install -e
*.egg-info/

/_logs

# log classifier data
aws/lambda/log-classifier/data/dataset/

# Generated file
/aws/lambda/clickhouse-replicator-dynamo/generated_query.sql

# We use yarn.lock instead of package-lock.json for torchci
/torchci/package-lock.json

# Rust stuff for cleanup-ssm tool
# Generated by Cargo
# will have compiled files and executables
aws/tools/cleanup-ssm/debug/
aws/tools/cleanup-ssm/target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
aws/tools/cleanup-ssm/Cargo.lock

# These are backup files generated by rustfmt
aws/tools/cleanup-ssm/**/*.rs.bk
