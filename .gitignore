.vscode
.venv
.idea
.lintbin

*.env
*.zip
*.swp

__pycache__

.DS_Store
*.pem

.terraform
*.tfstate*
crash.log
*.tfvars*
override.tf*
*_override.tf*
.terraformrc
terraform.rc

aws/websites/metrics.pytorch.org/vars.yml

aws/lambda/github-webhook-rds-sync/python/
aws/lambda/github-webhook-rds-sync/hooks/
aws/lambda/rds-proxy/python/

.vercel
torchci/api/log/classify/target/
torchci/api/log/classify/Cargo.lock
*.rs.bk

node_modules/

setup-ssh/yarn-error.log*
setup-ssh/lib/
setup-ssh/__tests__/runner/

**/revert_file_name.txt
# Generated by Cargo
# will have compiled files and executables
tools/lintrunner/target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# Ignore new insta snapshots
tests/snapshots/*.new


# Generated by Maturin
# Byte-compiled / optimized / DLL files
__pycache__/
.pytest_cache/
*.py[cod]

# C extensions
*.so

# Distribution / packaging
.Python
.venv/
env/
bin/
build/
develop-eggs/
dist/
eggs/
lib/
lib64/
parts/
sdist/
var/
include/
man/
venv/
*.egg-info/
.installed.cfg
*.egg

# Installer logs
pip-log.txt
pip-delete-this-directory.txt
pip-selfcheck.json

# Unit test / coverage reports
htmlcov/
.tox/
.coverage
.cache
nosetests.xml
coverage.xml

# Translations
*.mo

# Mr Developer
.mr.developer.cfg
.project
.pydevproject

# Rope
.ropeproject

# Django stuff:
*.log
*.pot

.DS_Store

# Sphinx documentation
docs/_build/

# PyCharm
.idea/

# VSCode
.vscode/

# Pyenv
.python-version
