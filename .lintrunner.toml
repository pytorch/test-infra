merge_base_with = "origin/main"

[[linter]]
code = 'FLAKE8'
include_patterns = ['**/*.py']
exclude_patterns = [
    '.git/**',
]
command = [
    'python3',
    'tools/linter/adapters/flake8_linter.py',
    '--',
    '@{{PATHSFILE}}'
]
init_command = [
    'python3',
    'tools/linter/adapters/pip_init.py',
    '--dry-run={{DRYRUN}}',
    'flake8==6.0.0',
    'flake8-bugbear==23.3.23',
    'flake8-comprehensions==3.12.0',
    'flake8-executable==2.1.3',
    'flake8-logging-format==0.9.0',
    'flake8-pyi==23.3.1',
    'flake8-simplify==0.19.3',
    'mccabe==0.7.0',
    'pycodestyle==2.10.0',
    'pyflakes==3.0.1',
]

[[linter]]
code = 'MYPY'
include_patterns = [
    'tools/**/*.py',
    'tools/**/*.pyi',
    'stats/**/*.py',
    'stats/**/*.pyi',
    'torchci/**/*.py',
    'torchci/**/*.pyi',
    '.github/scripts/*.py',
]
command = [
    'python3',
    'tools/linter/adapters/mypy_linter.py',
    '--config=mypy.ini',
    '--',
    '@{{PATHSFILE}}'
]
init_command = [
    'python3',
    'tools/linter/adapters/pip_init.py',
    '--dry-run={{DRYRUN}}',
    'numpy==1.24.3',
    'expecttest==0.1.3',
    'mypy==0.982',
    'types-requests==2.27.25',
    'types-PyYAML==6.0.7',
    'types-tabulate==0.8.8',
    'types-protobuf==3.19.18',
    'types-pkg-resources==0.1.3',
    'types-Jinja2==2.11.9',
    'junitparser==2.1.1',
    'rich==10.9.0',
    'pyyaml==6.0',
]

[[linter]]
code = 'TYPEIGNORE'
include_patterns = ['**/*.py', '**/*.pyi']
exclude_patterns = [
]
command = [
    'python3',
    'tools/linter/adapters/grep_linter.py',
    '--pattern=# type:\s*ignore([^\[]|$)',
    '--linter-name=TYPEIGNORE',
    '--error-name=unqualified type: ignore',
    """--error-description=\
        This line has an unqualified `type: ignore`; \
        please convert it to `type: ignore[xxxx]`\
    """,
    '--',
    '@{{PATHSFILE}}'
]

[[linter]]
code = 'NOQA'
include_patterns = ['**/*.py', '**/*.pyi']
command = [
    'python3',
    'tools/linter/adapters/grep_linter.py',
    '--pattern=# noqa([^:]|$)',
    '--linter-name=NOQA',
    '--error-name=unqualified noqa',
    """--error-description=\
        This line has an unqualified `noqa`; \
        please convert it to `noqa: XXXX`\
    """,
    '--',
    '@{{PATHSFILE}}'
]

[[linter]]
code = 'NEWLINE'
include_patterns=['**']
exclude_patterns=[
    '**/*.bat',
    '**/*.expect',
    '**/*.ipynb',
    '**/*.ps1',
    '**/*.ptl',
    '**/fixtures/**',
    '**/snapshots/**',
]
command = [
    'python3',
    'tools/linter/adapters/newlines_linter.py',
    '--',
    '@{{PATHSFILE}}',
]
is_formatter = true


[[linter]]
code = 'SPACES'
include_patterns = ['**']
exclude_patterns = [
    '**/*.diff',
    '**/*.patch',
    '**/fixtures/**',
    '**/snapshots/**',
]
command = [
    'python3',
    'tools/linter/adapters/grep_linter.py',
    '--pattern=[[:blank:]]$',
    '--linter-name=SPACES',
    '--error-name=trailing spaces',
    '--replace-pattern=s/[[:blank:]]+$//',
    """--error-description=\
        This line has trailing spaces; please remove them.\
    """,
    '--',
    '@{{PATHSFILE}}'
]

[[linter]]
code = 'TABS'
include_patterns = ['**']
exclude_patterns = [
    '**/*.svg',
    '**/*Makefile',
    '**/.gitattributes',
    '**/.gitmodules',
    '.lintrunner.toml',
    '**/fixtures/**',
    '**/snapshots/**',
]
command = [
    'python3',
    'tools/linter/adapters/grep_linter.py',
    # @lint-ignore TXT2
    '--pattern=	',
    '--linter-name=TABS',
    '--error-name=saw some tabs',
    '--replace-pattern=s/\t/    /',
    """--error-description=\
        This line has tabs; please replace them with spaces.\
    """,
    '--',
    '@{{PATHSFILE}}'
]

[[linter]]
code = 'PYPIDEP'
include_patterns = ['.github/**']
exclude_patterns = [
    '**/*.rst',
    '**/*.py',
    '**/*.md',
    '**/*.diff',
]
command = [
    'python3',
    'tools/linter/adapters/grep_linter.py',
    """--pattern=\
    (pip|pip3|python -m pip|python3 -m pip|python3 -mpip|python -mpip) \
    install ([a-zA-Z0-9][A-Za-z0-9\\._\\-]+)([^/=<>~!]+)[A-Za-z0-9\\._\\-\\*\\+\\!]*$\
    """,
    '--linter-name=PYPIDEP',
    '--error-name=unpinned PyPI install',
    """--error-description=\
        This line has unpinned PyPi installs; \
        please pin them to a specific version: e.g. 'thepackage==1.2'\
    """,
    '--',
    '@{{PATHSFILE}}'
]

[[linter]]
code = 'EXEC'
include_patterns = ['**']
exclude_patterns = [
    'third_party/**',
    'torch/bin/**',
    '**/*.so',
    '**/*.py',
    '**/*.sh',
    '**/*.bash',
    '**/git-pre-commit',
    '**/git-clang-format',
    '**/gradlew',
    '**/fixtures/**',
    '**/snapshots/**',
]
command = [
    'python3',
    'tools/linter/adapters/exec_linter.py',
    '--',
    '@{{PATHSFILE}}',
]

[[linter]]
code = 'ACTIONLINT'
include_patterns = [
    '.github/workflows/*.yml',
    '.github/workflows/*.yaml',
    # actionlint does not support composite actions yet
    # '.github/actions/**/*.yml',
    # '.github/actions/**/*.yaml',
]
command = [
    'python3',
    'tools/linter/adapters/actionlint_linter.py',
    '--binary=.lintbin/actionlint',
    '--',
    '@{{PATHSFILE}}',
]
init_command = [
    'python3',
    'tools/linter/adapters/s3_init.py',
    '--config-json=tools/linter/adapters/s3_init_config.json',
    '--linter=actionlint',
    '--dry-run={{DRYRUN}}',
    '--output-dir=.lintbin',
    '--output-name=actionlint',
]

# Black + usort
[[linter]]
code = 'UFMT'
include_patterns = [
    'tools/torchci/**/*.py',
    '.github/scripts/*.py',
]
command = [
    'python3',
    'tools/linter/adapters/ufmt_linter.py',
    '--',
    '@{{PATHSFILE}}'
]
init_command = [
    'python3',
    'tools/linter/adapters/pip_init.py',
    '--dry-run={{DRYRUN}}',
    '--no-black-binary',
    'black==23.3.0',
    'ufmt==2.1.0',
    'usort==1.0.6',
]
is_formatter = true

[[linter]]
code = 'COPYRIGHT'
include_patterns = ['**']
exclude_patterns = ['.lintrunner.toml', '**/fixtures/**']
command = [
    'python3',
    'tools/linter/adapters/grep_linter.py',
    '--pattern=Confidential and proprietary',
    '--linter-name=COPYRIGHT',
    '--error-name=Confidential Code',
    """--error-description=\
        Proprietary and confidential source code\
        should not be contributed to PyTorch/test-infra codebase\
    """,
    '--',
    '@{{PATHSFILE}}'
]

[[linter]]
code = 'LINTRUNNER_VERSION'
include_patterns = ['**']
command = [
    'python3',
    'tools/linter/adapters/lintrunner_version_linter.py'
]

[[linter]]
code = 'RUFF'
include_patterns = ['**/*.py']
exclude_patterns = [
]
command = [
    'python3',
    'tools/linter/adapters/ruff_linter.py',
    '--config=pyproject.toml',
    '--show-disable',
    '--',
    '@{{PATHSFILE}}'
]
init_command = [
    'python3',
    'tools/linter/adapters/pip_init.py',
    '--dry-run={{DRYRUN}}',
    'ruff==0.0.269',
]
is_formatter = true

[[linter]]
code = 'RUSTFMT'
include_patterns = ['**/*.rs']
command = [
    'python',
    'tools/lintrunner/examples/rustfmt_linter.py',
    '--binary=rustfmt',
    '--config-path=tools/lintrunner/rustfmt.toml',
    '--',
    '@{{PATHSFILE}}'
]
